// Generated by CoffeeScript 1.6.2
(function() {
  var cltags, expect;

  expect = require("chai").expect;

  cltags = require("../cltags.js");

  describe("ClTags", function() {
    return describe("#parse()", function() {
      it("should parse the first non-tagged/script string as a command", function() {
        var args, results;

        args = ["node", "script_name", "test_command"];
        results = cltags.parse(args);
        return expect(results).to.have.a.property("command", "test_command");
      });
      it("should collect other string tags as a query", function() {
        var args, results;

        args = ["script", "cmd", "hello", "world", "!"];
        results = cltags.parse(args);
        return expect(results.query).to.equal("hello world !");
      });
      it("should collect long formed tags", function() {
        var args, results;

        args = ["script", "--foo=bar"];
        results = cltags.parse(args);
        return expect(results).to.have.a.property("foo", "bar");
      });
      it("should collect empty tags as booleans", function() {
        var args, results;

        args = ["script", "--foo"];
        results = cltags.parse(args);
        return expect(results).to.have.a.property("foo", true);
      });
      it("should accept defaults", function() {
        var args, defaults, expected, results;

        args = ["script", "--foo=bar"];
        defaults = {
          foo: "baz",
          hello: "world"
        };
        results = cltags.parse(args, defaults);
        expected = {
          command: "",
          query: "",
          foo: "bar",
          hello: "world"
        };
        return expect(results).to.deep.equal(expected);
      });
      it("should replace short formed tags", function() {
        var args, expected, replacements, results;

        args = ["script", "-fgh=world"];
        replacements = {
          f: "foo",
          h: "hello"
        };
        results = cltags.parse(args, {}, replacements);
        expected = {
          command: "",
          query: "",
          foo: true,
          g: true,
          hello: "world"
        };
        return expect(results).to.deep.equal(expected);
      });
      return it("should convert numeric tag values to ints", function() {
        var args, results;

        args = ["script", "--port=4040"];
        results = cltags.parse(args);
        return expect(results).to.have.a.property("port", 4040);
      });
    });
  });

}).call(this);
